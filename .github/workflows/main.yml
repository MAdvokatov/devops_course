# This is a basic workflow to help you get started with Actions

name: CI-first-try

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # in this example, there is a newer version already installed, 3.7.7, so the older version will be downloaded
        python-version: ['3.7']
  

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
        
    
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: docker/setup-qemu-action@master
        with: 
            platforms: all
      - uses: docker/setup-buildx-action@master
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      
      
      - name: Run lab5 tests
        run: |
          cd ./lab5/
          make app
          make tests
          make run
          make test-app
          make docker-push
        
        
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./lab4/
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/devops_course:latest-try
          
      # Runs a single command using the runners shell
      - name: Run tests for lab2
 
        run: |
          cd ./lab2/
          sudo apt-get install pipenv -y
          pipenv install --system
          pytest tests/tests.py || true
          

          
          
          
